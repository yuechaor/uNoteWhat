(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{209:function(t,a,e){"use strict";e.r(a);var s=e(1),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" configuration")]),t._v(" "),e("h2",{attrs:{id:"adding-accounts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-accounts"}},[t._v("#")]),t._v(" adding accounts")]),t._v(" "),e("p",[t._v("git config [--local | --global | --system] user.name 'Your name'")]),t._v(" "),e("p",[t._v("git config [--local | --global | --system] user.email 'Your email'")]),t._v(" "),e("h2",{attrs:{id:"check-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#check-configuration"}},[t._v("#")]),t._v(" check configuration")]),t._v(" "),e("p",[t._v("git config --list [--local | --global | --system]")]),t._v(" "),e("h2",{attrs:{id:"unset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unset"}},[t._v("#")]),t._v(" unset")]),t._v(" "),e("p",[t._v("git config --unset [--local | --global | --system] user.name")]),t._v(" "),e("h2",{attrs:{id:"git-add-u-git-add-git-add-a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add-u-git-add-git-add-a"}},[t._v("#")]),t._v(" git add -u, git add ., git add -A")]),t._v(" "),e("ol",[e("li",[t._v("-U 可以把文件的修改和删除添加到暂存区，而"),e("em",[t._v("新建的文件")]),t._v("不会被添加到暂存区")]),t._v(" "),e("li",[t._v(". 和 -A 效果一样")])]),t._v(" "),e("h2",{attrs:{id:"git-reset-hard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard"}},[t._v("#")]),t._v(" git reset --hard")]),t._v(" "),e("p",[t._v("清除暂存区")]),t._v(" "),e("h2",{attrs:{id:"git-mv-readme-readme-md"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-mv-readme-readme-md"}},[t._v("#")]),t._v(" git mv readme readme.md")]),t._v(" "),e("p",[t._v("rename file name 重命名文件并推入暂存区。")]),t._v(" "),e("h2",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),e("p",[t._v("• git log --all 查看所有分支的历史")]),t._v(" "),e("p",[t._v("• git log --all --graph 查看图形化的 log 地址")]),t._v(" "),e("p",[t._v("• git log --oneline 查看单行的简洁历史。")]),t._v(" "),e("p",[t._v("• git log --oneline -n4 查看最近的四条简洁历史。")]),t._v(" "),e("p",[t._v("• git log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。")]),t._v(" "),e("p",[t._v("• git help --web log 跳转到git log 的帮助文档网页")]),t._v(" "),e("p",[t._v("什么时候用-- 什么时候用-呢，我看到有些参数加了两个-，-n4又是只加了一个,发现似乎是"),e("strong",[t._v("单字母")]),t._v("的参数是 '-'，"),e("strong",[t._v("非单字母")]),t._v("的参数是'--'。")]),t._v(" "),e("h1",{attrs:{id:"探秘-git目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#探秘-git目录"}},[t._v("#")]),t._v(" 探秘.git目录")]),t._v(" "),e("h2",{attrs:{id:"cat命令主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cat命令主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。"}},[t._v("#")]),t._v(" cat命令主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。")]),t._v(" "),e("p",[t._v("cat HEAD 查看HEAD文件的内容")]),t._v(" "),e("p",[t._v("git cat-file 命令 显示版本库对象的内容、类型及大小信息。")]),t._v(" "),e("p",[t._v("git cat-file -t b44dd71d62a5a8ed3 显示版本库对象的类型")]),t._v(" "),e("p",[t._v("git cat-file -s b44dd71d62a5a8ed3 显示版本库对象的大小")]),t._v(" "),e("p",[t._v("git cat-file -p b44dd71d62a5a8ed3 显示版本库对象的内容")]),t._v(" "),e("h2",{attrs:{id:"other-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#other-files"}},[t._v("#")]),t._v(" Other files")]),t._v(" "),e("p",[t._v("HEAD：指向当前的工作路径")]),t._v(" "),e("p",[t._v("config：存放本地仓库（local）相关的配置信息。")]),t._v(" "),e("p",[t._v("refs/heads:存放分支")]),t._v(" "),e("p",[t._v("refs/tags:存放tag，又叫里程牌 （当这次commit是具有里程碑意义的 比如项目1.0的时候 就可以打tag）")]),t._v(" "),e("p",[t._v("objects：存放对象 .git/objects/ 文件夹中的子文件夹都是以哈希值的前两位字符命名 每个object由40位字符组成，前两位字符用来当文件夹，后38位做文件。")]),t._v(" "),e("h1",{attrs:{id:"commit-tree-blob"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-tree-blob"}},[t._v("#")]),t._v(" commit tree blob")]),t._v(" "),e("p",[t._v("commit: snapshot  当前所有文件的快照")]),t._v(" "),e("p",[t._v("tree： 文件夹，包含一个或多个blob")]),t._v(" "),e("p",[t._v("blob： 文件")]),t._v(" "),e("h1",{attrs:{id:"detached-head-分离头指针情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#detached-head-分离头指针情况"}},[t._v("#")]),t._v(" detached HEAD 分离头指针情况")]),t._v(" "),e("p",[t._v("git checkout b44dd71d62a5a8ed3")]),t._v(" "),e("p",[t._v("变更没有基于一个branch，有可能丢失变更。")]),t._v(" "),e("p",[t._v("分离头指针的坏处：当你在这种情况下工作时，如果切换到master，git有可能清除你在分离头指针情况下的所有commit，所有比较危险。必须跟一个branch结合才不会丢失。")]),t._v(" "),e("p",[t._v("好处：提供了比较灵活的测试方法，当你需要做一些测试但不保存时，可以checkout一个分支出来做测试，个人感觉不常用。")]),t._v(" "),e("h1",{attrs:{id:"git-checkout-b-newbranchname-basedbranchorcommit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-b-newbranchname-basedbranchorcommit"}},[t._v("#")]),t._v(" git checkout -b NewBranchName BasedBranchOrCommit")]),t._v(" "),e("p",[t._v("创建新分支可以基于哪个commit或者分支")]),t._v(" "),e("h1",{attrs:{id:"git-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),e("p",[t._v("git diff 52ba362 00b7895")]),t._v(" "),e("p",[t._v("比较两个commits 的不同。")]),t._v(" "),e("h3",{attrs:{id:"head的使用，以及parent符号-和-。我觉得这里几个地方没讲清楚"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head的使用，以及parent符号-和-。我觉得这里几个地方没讲清楚"}},[t._v("#")]),t._v(" HEAD的使用，以及PARENT符号^和~。我觉得这里几个地方没讲清楚")]),t._v(" "),e("ol",[e("li",[t._v("一个节点，可以包含多个子节点（checkout 出多个分支）")]),t._v(" "),e("li",[t._v("一个节点可以有多个父节点（多个分支合并）")]),t._v(" "),e("li",[t._v("^是~都是父节点，区别是跟随数字时候，^2 是第二个父节点，而~2是父节点的父节点")]),t._v(" "),e("li",[t._v("^和~可以组合使用,例如 HEAD~2^2")])]),t._v(" "),e("h1",{attrs:{id:"how-to-delete-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-delete-branch"}},[t._v("#")]),t._v(" How to delete branch")]),t._v(" "),e("h3",{attrs:{id:"git-checkout-d-branchname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-d-branchname"}},[t._v("#")]),t._v(" git checkout -d branchName")]),t._v(" "),e("p",[t._v("如果报错，可以用-D强制删除。")]),t._v(" "),e("h1",{attrs:{id:"对最近一次提交的message进行修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对最近一次提交的message进行修改"}},[t._v("#")]),t._v(" 对最近一次提交的message进行修改")]),t._v(" "),e("p",[t._v("git commit --amend")]),t._v(" "),e("h1",{attrs:{id:"对老旧的commit修改message进行修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对老旧的commit修改message进行修改"}},[t._v("#")]),t._v(" 对老旧的commit修改message进行修改")]),t._v(" "),e("p",[t._v("git rebase -i [需要变更的父节点的哈希值]")]),t._v(" "),e("p",[t._v("reword: 改pick 为reword，然后更改对应的message")]),t._v(" "),e("p",[t._v("note： 这些更改是基于local directory的， 不是远程协作，远程协作用rebase要谨慎。")]),t._v(" "),e("h1",{attrs:{id:"如何将连续多个commit合并成一个？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何将连续多个commit合并成一个？"}},[t._v("#")]),t._v(" 如何将连续多个commit合并成一个？")]),t._v(" "),e("ol",[e("li",[t._v("git rebase -i [需要合并的所有commit的父节点的哈希值]")]),t._v(" "),e("li",[t._v("squash： 把pick 改成 squash， 但需要保留一个pick")]),t._v(" "),e("li",[t._v("为合并后的commit添加一个新的message，同时保留了其他的message。")])]),t._v(" "),e("h1",{attrs:{id:"如何将不连续的多个commit合并成一个？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何将不连续的多个commit合并成一个？"}},[t._v("#")]),t._v(" 如何将不连续的多个commit合并成一个？")]),t._v(" "),e("ol",[e("li",[t._v("git rebase -i [需要合并的commit的哈希值]")]),t._v(" "),e("li",[t._v("添加pick [需要合并的commit的哈希值]")]),t._v(" "),e("li",[t._v("把需要合并的commit 放在这个pick的后面，并使用squash，表示和前一个commit融合。")]),t._v(" "),e("li",[t._v("为合并后的commit 添加新的message，同时可以选择保留原来的message.")])]),t._v(" "),e("h1",{attrs:{id:"如何比较暂存区和head-branch所含文件的差别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何比较暂存区和head-branch所含文件的差别"}},[t._v("#")]),t._v(" 如何比较暂存区和HEAD branch所含文件的差别")]),t._v(" "),e("p",[t._v("git diff --cached")]),t._v(" "),e("h1",{attrs:{id:"如何比较工作区和暂存区所含文件的差别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何比较工作区和暂存区所含文件的差别"}},[t._v("#")]),t._v(" 如何比较工作区和暂存区所含文件的差别")]),t._v(" "),e("p",[t._v("git diff")]),t._v(" "),e("p",[t._v("默认情况下比较的是工作区和暂存区的文件差别")]),t._v(" "),e("p",[t._v("git diff -- fileName")]),t._v(" "),e("p",[t._v("只查看一个文件的变更内容。")]),t._v(" "),e("h1",{attrs:{id:"如何让暂存区恢复成跟head一样？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何让暂存区恢复成跟head一样？"}},[t._v("#")]),t._v(" 如何让暂存区恢复成跟HEAD一样？")]),t._v(" "),e("p",[t._v("有时候有更好的方案，需要恢复到HEAD指向的文件快照的样子，所有需要放弃所有暂存区的内容。")]),t._v(" "),e("blockquote",[e("p",[t._v("git reset HEAD")])]),t._v(" "),e("p",[t._v("恢复部分文件可以采用")]),t._v(" "),e("blockquote",[e("p",[t._v("git reset HEAD -- fileName")])]),t._v(" "),e("h1",{attrs:{id:"如何让工作区恢复成跟暂存区一样？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何让工作区恢复成跟暂存区一样？"}},[t._v("#")]),t._v(" 如何让工作区恢复成跟暂存区一样？")]),t._v(" "),e("p",[t._v("有时候需要把文件快照从暂存区拷贝到工作区，可以用以下命令：")]),t._v(" "),e("blockquote",[e("p",[t._v("git checkout -- fileName [或文件路径]")])]),t._v(" "),e("h1",{attrs:{id:"怎样取消暂存区部分文件的更改？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎样取消暂存区部分文件的更改？"}},[t._v("#")]),t._v(" 怎样取消暂存区部分文件的更改？")]),t._v(" "),e("p",[t._v("多个文件以及add到了暂存区，需要撤销其中一个文件，可以用以下命令：")]),t._v(" "),e("blockquote",[e("p",[t._v("git reset HEAD -- fileName1 fileName2")])]),t._v(" "),e("h1",{attrs:{id:"如何消除最近的几次的commit提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何消除最近的几次的commit提交"}},[t._v("#")]),t._v(" 如何消除最近的几次的commit提交")]),t._v(" "),e("p",[t._v("想消除最近的两次commit，彻底不想要了，让暂存区和工作区都恢复到一个以前特定commit点，可以用：")]),t._v(" "),e("blockquote",[e("p",[t._v("git reset --hard CommitID")])]),t._v(" "),e("h1",{attrs:{id:"如何比较两个提交的指定文件的不同？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何比较两个提交的指定文件的不同？"}},[t._v("#")]),t._v(" 如何比较两个提交的指定文件的不同？")]),t._v(" "),e("p",[t._v("如何看两个不同分支或者commit之间的不同，可以用：")]),t._v(" "),e("p",[t._v("比较temp和master"),e("strong",[t._v("两个分支")]),t._v("的所有差异")]),t._v(" "),e("blockquote",[e("p",[t._v("git diff temp master")])]),t._v(" "),e("p",[t._v("比较temp和master两个分支的"),e("strong",[t._v("指定文件")]),t._v("差异")]),t._v(" "),e("blockquote",[e("p",[t._v("git diff temp master -- FileName")])]),t._v(" "),e("p",[t._v("以上命令也可以使用commit的ID，代替分支名")]),t._v(" "),e("h1",{attrs:{id:"如何正确删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何正确删除文件"}},[t._v("#")]),t._v(" 如何正确删除文件")]),t._v(" "),e("blockquote",[e("p",[t._v("git rm fileName")])]),t._v(" "),e("h1",{attrs:{id:"工作中遇到紧急加塞的情况，怎么办？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作中遇到紧急加塞的情况，怎么办？"}},[t._v("#")]),t._v(" 工作中遇到紧急加塞的情况，怎么办？")]),t._v(" "),e("p",[t._v("正在工作区做修改，突然遇到新的情况，如之前的commit中有bug需要修改，手头工作可以先放到stash中：")]),t._v(" "),e("blockquote",[e("p",[t._v("git stash")])]),t._v(" "),e("p",[t._v("然后可以做紧急任务的修改工作，完事提交commit之后，可以再把stash中的提取出来，")]),t._v(" "),e("blockquote",[e("p",[t._v("git stash apply (保留内容)")])]),t._v(" "),e("blockquote",[e("p",[t._v("git stash pop  (pop之后stash中内容会删除)")])]),t._v(" "),e("h1",{attrs:{id:"如何指定不需要git管理的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何指定不需要git管理的文件"}},[t._v("#")]),t._v(" 如何指定不需要git管理的文件")]),t._v(" "),e("p",[t._v("需要编辑.gitignore文件\ngithub官网上有针对不同编程语言所需要的.gitignore的编写。")]),t._v(" "),e("h1",{attrs:{id:"如何将git仓库备份到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何将git仓库备份到本地"}},[t._v("#")]),t._v(" 如何将git仓库备份到本地")]),t._v(" "),e("p",[t._v("新建一个backup的文件夹，然后在文件夹路径下，使用命令：")]),t._v(" "),e("h2",{attrs:{id:"哑协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哑协议"}},[t._v("#")]),t._v(" 哑协议")]),t._v(" "),e("blockquote",[e("p",[t._v("git clone --bare /Users/RYC/Desktop/vuepressBlog/my-blog/.git ya.git")])]),t._v(" "),e("p",[t._v("--bare: 不带工作区的裸仓库")]),t._v(" "),e("h2",{attrs:{id:"智能协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#智能协议"}},[t._v("#")]),t._v(" 智能协议")]),t._v(" "),e("blockquote",[e("p",[t._v("git clone --bare file:///Users/RYC/Desktop/vuepressBlog/my-blog/.git zhineng.git")])]),t._v(" "),e("h1",{attrs:{id:"github"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[t._v("#")]),t._v(" github")]),t._v(" "),e("h2",{attrs:{id:"配置公私钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置公私钥"}},[t._v("#")]),t._v(" 配置公私钥")]),t._v(" "),e("p",[t._v("首先查看是否有公私钥")]),t._v(" "),e("blockquote",[e("p",[t._v("cd ~/.ssh\nls -al\n如果有的话是可以看到的。")])]),t._v(" "),e("p",[t._v("如果没有，需要生成新的公私钥,使用下面link：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent",target:"_blank",rel:"noopener noreferrer"}},[t._v("Generating a new SSH key and adding it to the ssh-agent"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=v.exports}}]);